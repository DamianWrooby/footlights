{"id":"js/models/List.js","dependencies":[{"name":"C:\\webdev\\footlights\\package.json","includedInParent":true,"mtime":1569916517734},{"name":"axios","loc":{"line":1,"column":18},"parent":"C:\\webdev\\footlights\\src\\js\\models\\List.js","resolved":"C:\\webdev\\footlights\\node_modules\\axios\\index.js"},{"name":"../config","loc":{"line":2,"column":22},"parent":"C:\\webdev\\footlights\\src\\js\\models\\List.js","resolved":"C:\\webdev\\footlights\\src\\js\\config.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _config = require(\"../config\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar List =\n/*#__PURE__*/\nfunction () {\n  function List() {\n    _classCallCheck(this, List);\n  }\n\n  _createClass(List, [{\n    key: \"getList\",\n    value: function () {\n      var _getList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return (0, _axios.default)(\"https://www.scorebat.com/video-api/v1/\");\n\n              case 3:\n                res = _context.sent;\n                this.result = res.data;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function getList() {\n        return _getList.apply(this, arguments);\n      }\n\n      return getList;\n    }()\n  }]);\n\n  return List;\n}();\n\nexports.default = List;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"js/models/List.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"js/models/List.js","original":{"line":2,"column":0}},{"name":"List","generated":{"line":24,"column":4},"source":"js/models/List.js","original":{"line":4,"column":21}},{"generated":{"line":27,"column":0},"source":"js/models/List.js","original":{"line":5,"column":1}},{"generated":{"line":27,"column":18},"source":"js/models/List.js","original":{"line":5,"column":15}},{"generated":{"line":28,"column":0},"source":"js/models/List.js","original":{"line":5,"column":15}},{"generated":{"line":29,"column":0},"source":"js/models/List.js","original":{"line":6,"column":2}},{"generated":{"line":44,"column":23},"source":"js/models/List.js","original":{"line":9,"column":21}},{"name":"res","generated":{"line":47,"column":0},"source":"js/models/List.js","original":{"line":9,"column":9}},{"name":"res","generated":{"line":47,"column":16},"source":"js/models/List.js","original":{"line":9,"column":9}},{"generated":{"line":48,"column":0},"source":"js/models/List.js","original":{"line":10,"column":3}},{"name":"result","generated":{"line":48,"column":21},"source":"js/models/List.js","original":{"line":10,"column":8}},{"generated":{"line":48,"column":27},"source":"js/models/List.js","original":{"line":10,"column":3}},{"name":"res","generated":{"line":48,"column":30},"source":"js/models/List.js","original":{"line":10,"column":17}},{"generated":{"line":48,"column":33},"source":"js/models/List.js","original":{"line":10,"column":20}},{"name":"data","generated":{"line":48,"column":34},"source":"js/models/List.js","original":{"line":10,"column":21}},{"generated":{"line":48,"column":38},"source":"js/models/List.js","original":{"line":10,"column":3}},{"name":"console","generated":{"line":55,"column":0},"source":"js/models/List.js","original":{"line":12,"column":3}},{"name":"console","generated":{"line":55,"column":16},"source":"js/models/List.js","original":{"line":12,"column":3}},{"generated":{"line":55,"column":23},"source":"js/models/List.js","original":{"line":12,"column":10}},{"name":"log","generated":{"line":55,"column":24},"source":"js/models/List.js","original":{"line":12,"column":11}},{"generated":{"line":55,"column":27},"source":"js/models/List.js","original":{"line":12,"column":3}}],"sources":{"js/models/List.js":"import axios from 'axios';\nimport { proxy } from '../config';\n\nexport default class List {\n\tconstructor() {\n\t}\n\tasync getList() {\n\t\ttry {\n\t\t\tconst res = await axios(`https://www.scorebat.com/video-api/v1/`);\n\t\t\tthis.result = res.data;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n}\n"},"lineCount":null}},"error":null,"hash":"a30fe2b3ef881eb5c3e271a8f6519a21","cacheData":{"env":{}}}